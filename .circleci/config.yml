---
version: 2.1

jobs:
  mariadb:
    docker:
    - image: circleci/golang:1.15
      environment:
        SQL_DRIVER: mysql
        DB_URI: versions:versions@tcp(127.0.0.1:3306)/versions?charset=utf8&autocommit=true&multiStatements=true&maxAllowedPacket=0&interpolateParams=true
        REDIS_ENABLED: "true"
        REDIS_URI: redis://:password@127.0.0.1:6379
    - image: mariadb:10.5
      environment:
        MYSQL_DATABASE: versions
        MYSQL_USER: versions
        MYSQL_PASSWORD: versions
        MYSQL_ALLOW_EMPTY_PASSWORD: "true"
    - image: bitnami/redis:6.0
      environment:
        REDIS_PASSWORD: password

    steps:
    # pull sources
    - checkout

    - restore_cache:
        keys:
        - versions-api-mariadb-{{ checksum "go.mod" }}
    
    - run:
        name: go mod download
        command: go mod download

    - run:
        name: go vet
        command: go vet

    - run:
        name: Wait for DB to be ready
        command: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m
    
    - run:
        name: Wait for REDIS to be ready
        command: dockerize -wait tcp://127.0.0.1:6379 -timeout 1m
    
    - save_cache:
        key: versions-api-mariadb-{{ checksum "go.mod" }}
        paths:
        - /go/pkg/mod

    - run:
        name: Perform unit testing
        command: go test -v

  postgres:
    docker:
    - image: circleci/golang:1.15
      environment:
        SQL_DRIVER: postgres
        DB_URI: postgres://versions:versions@127.0.0.1:5432/versions?sslmode=disable
        REDIS_ENABLED: "true"
        REDIS_URI: redis://:password@127.0.0.1:6379
    - image: postgres:13.1
      environment:
        POSTGRES_DB: versions
        POSTGRES_USER: versions
        POSTGRES_PASSWORD: versions
    - image: bitnami/redis:6.0
      environment:
        REDIS_PASSWORD: password

    steps:
    # pull sources
    - checkout

    - restore_cache:
        keys:
        - versions-api-postgres-{{ checksum "go.mod" }}
    
    - run:
        name: go mod download
        command: go mod download

    - run:
        name: go vet
        command: go vet

    - run:
        name: Wait for DB to be ready
        command: dockerize -wait tcp://127.0.0.1:5432 -timeout 1m

    - run:
        name: Wait for REDIS to be ready
        command: dockerize -wait tcp://127.0.0.1:6379 -timeout 1m
    
    - save_cache:
        key: versions-api-postgres-{{ checksum "go.mod" }}
        paths:
        - /go/pkg/mod

    - run:
        name: Perform unit testing
        command: go test -v

  build-latest:
    working_directory: /app
    docker:
    - image: docker:stable-dind

    steps:
    # pull sources
    - checkout
    - setup_remote_docker

    - run:
        name: Try to build docker image
        command: |
          IMAGE_NAME=docker.pkg.github.com/Lord-Y/versions-api
          docker build -t ${IMAGE_NAME}:latest .

  build-tags:
    working_directory: /app
    docker:
    - image: docker:stable-dind

    steps:
    # pull sources
    - checkout
    - setup_remote_docker

    - run:
        name: Build docker image
        command: |
          echo "$GITHUB_ACCESS_TOKEN" | docker login https://docker.pkg.github.com -u Lord-Y --password-stdin
          IMAGE_NAME=docker.pkg.github.com/Lord-Y/versions-api
          docker build -t ${IMAGE_NAME}:${CIRCLE_TAG} .
          docker push ${IMAGE_NAME}:${CIRCLE_TAG}

workflows:
  version: 2
  test-and-build:
    jobs:
    - mariadb
    - postgres
    - build-latest:
        requires:
        - mariadb
        - postgres
        filters:
          branches:
            ignore: master
    - build-tags:
        requires:
        - mariadb
        - postgres
        filters:
          tags:
            only: /^v.*/
          branches:
            only: master